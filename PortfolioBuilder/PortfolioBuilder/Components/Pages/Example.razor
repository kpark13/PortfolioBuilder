@page "/Example"
@inject UploadedImageService UploadedImageService
@using System.IO

<div class="sidebar open">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h3 class="mb-0">Uploaded Images</h3>
        <a href="/Upload" class="btn btn-dark d-flex align-items-center gap-2 px-2 py-1 shadow-sm" style="border-radius: 8px;">

            <i class="bi bi-upload"></i> Upload Images
        </a>
    </div>

    @for (int page = 1; page <= 6; page++)
    {
        <div class="upload-section">
            <label>Page @(page):</label>
            <select class="image-select" @onchange="e => OnImageSelected(page, e.Value?.ToString())" value="@GetSelectedImage(page)">
                <option value="">-- Select Image --</option>
                @foreach (var image in availableImages)
                {
                    <option value="@image">@Path.GetFileName(image)</option>
                }
            </select>
        </div>
    }
    <h5 style="margin-bottom: 1.25rem;">+ add pages</h5>

    <button class="btn mb-2" style="background-color: black; color: white; width: 100%;" @onclick="SaveImages">
        Save Changes
    </button>

    <a href="/Example" class="btn btn-outline-dark" style="width: 100%;">
        Preview
    </a>



</div>

<div class="book">
    <input type="checkbox" id="c1" />
    <input type="checkbox" id="c2" />
    <input type="checkbox" id="c3" />
    <input type="checkbox" id="c4" />
    <input type="checkbox" id="c5" />

    <div id="cover">
        <!-- Cover page image (optional) -->
    </div>

    <div class="flip-book">
        <div class="flip" id="p1">
            <div class="back">
                <label class="back-btn" for="c1">Back</label>
            </div>
            <div class="front" style="background:darkblue; color:white;">
                <label class="next-btn" for="c1" style="color:white;border:1px solid white;">Open</label>
            </div>
        </div>

        <div class="flip" id="p2">
            <div class="back">
                @if (TryGetImage(2, out var back2))
                {
                    <img src="@back2" alt="Page 2 Back" />
                }
                <label class="back-btn" for="c2">Back</label>
            </div>
            <div class="front">
                @if (TryGetImage(1, out var front2))
                {
                    <img src="@front2" alt="Page 2 Front" />
                }
                <label class="next-btn" for="c2">Next</label>
            </div>
        </div>

        <div class="flip" id="p3">
            <div class="back">
                @if (TryGetImage(3, out var back3))
                {
                    <img src="@back3" alt="Page 3 Back" />
                }
                <label class="back-btn" for="c3">Back</label>
            </div>
            <div class="front">
                @if (TryGetImage(4, out var front3))
                {
                    <img src="@front3" alt="Page 3 Front" />
                }
                <label class="next-btn" for="c3">Next</label>
            </div>
        </div>

        <div class="flip" id="p4">
            <div class="back">
                @if (TryGetImage(5, out var back4))
                {
                    <img src="@back4" alt="Page 4 Back" />
                }
                <label class="back-btn" for="c4">Back</label>
            </div>
            <div class="front">
                @if (TryGetImage(6, out var front4))
                {
                    <img src="@front4" alt="Page 4 Front" />
                }
                <label class="next-btn" for="c4">Next</label>
            </div>
        </div>

        <div class="flip" id="p5">
            <div class="back" style="color:white; background:darkblue;">
                <label class="back-btn" for="c5" style="color:white;border:1px solid white;">Back</label>
            </div>
            <div class="front">
                <label class="next-btn" for="c5">Next</label>
            </div>
        </div>
    </div>
</div>

@code {
    private List<string> availableImages = new();
    private Dictionary<int, string> selectedImages = new();

    protected override void OnInitialized()
    {
        availableImages = UploadedImageService.GetUploadedImages().ToList();
    }

    private void OnImageSelected(int page, string? imageUrl)
    {
        if (string.IsNullOrEmpty(imageUrl))
        {
            selectedImages.Remove(page);
        }
        else
        {
            selectedImages[page] = imageUrl!;
        }
    }

    private string? GetSelectedImage(int page)
    {
        if (selectedImages.TryGetValue(page, out var url))
        {
            return url;
        }
        return string.Empty;
    }

    private bool TryGetImage(int page, out string? url)
    {
        return selectedImages.TryGetValue(page, out url);
    }

    private void SaveImages()
    {
        // You can add persistent save logic here if needed
        StateHasChanged();
    }
}
